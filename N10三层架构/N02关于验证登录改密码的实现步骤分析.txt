2015-4-3 10:44:05

================================= 一	验证登录 ============================================
1.	需求分析
	1.	验证用户名是否存在
		1.	不存在 - 登录失败 提示用户名不存在
		2.	存在   - 登录成功 提示欢迎你xxx(用户名下的真实姓名)
	2.	修改密码
		TODO...
2.	编写SQL语句
	select Password,RealName from T_Users where Name = 'Heab'
3.	根据SQL语句编写DAL
	1. 参数: 一个@Name
	2. 返回值: 返回查到的数据, 不使用DataReader, 返回DataTable不太合适, 因为以后如果从文件中读取的话还要把数据弄成DataTable才能保持业务逻辑层不做改变, 由于返回的是多个数据, 可以考虑 对象 来表示并返回;
		--- 这个类三层中都要用到, 那么把它放到实体层(Model)
		--- 一般实体的属性个数跟表中字段的个数相同, 虽然这里只用到了Password和RealName
        
4.	BLL层检查用户登录
    1.  参数: 用户输入的用户名, 密码
    2.  返回值: 用户不存在, 用户密码不正确, 登录成功
        1.  返回null, 用户不存在
        2.  返回实体的密码与输入密码不一致, 用户密码不正确
        3.  返回实体密码与输入密码一致, 登录成功

================================= 二	修改密码 ============================================

1.	需求分析 SQL
	1.	验证用户输入的两次密码是否一致
	2.	验证输入的旧密码是否正确
		"select count(*) from T_Users where Name = @Name && Password = @Password"
	3.	修改密码
		"update from T_Users set Password = @Password where Name = @Name"
2.	DLL业务逻辑层 -- 方法个数, 每个方法的参数返回值
	1.	一个方法, 用于实现修改
		参数:	用户名, 密码, 新密码, 重复新密码
		返回值: 用户名不存在, 密码错误, 新旧密码不一致, 成功修改, 用户名下有多个用户
