2015-4-2 13:00:11

1.	程序集(Assembly)
	1.	.net中的dll和exe都是程序集;
		1.	exe 有入口函数主函数
		2.	dll 没有入口函数主函数
		3.	非.net的exe不是程序集
			1.	C/C++ dll exe => 二进制机器码文件
			2.	.net dll exe => 把一堆相关类打包成一个文件, 类似于jar包
				1.	类型元数据 - 描述在代码中定义的每一个类型和成员的二进制形式;
					1.	某个类有多少个属性, 多少个方法, 父类是谁...
				2.	程序元数据 - 程序集清单, 版本号, 名称等 即 程序集描述自己的最基本的信息;
				3.	IL代码	- reflector之所以还能查看C#代码是由IL代码推导出来的;
				4.	资源文件
				5.	这些信息可以通过AssemblyInfo.cs文件来定义;
				PS: 元 : 开始, 最基础的
	2.	程序集的好处
		1. 模块化编程
			1.	程序只引用必须的程序集, 减小程序的尺寸;
			2.	程序集可以封装一些代码, 只提供必要的访问接口;
	3.	程序集引用
		1.	引用自己的dll, 将会把dll拷贝到exe文件目录下;
		2.	引用官方dll, 不会发生拷贝, 安装.net的时候已经在操作系统中注册了, 程序能找到程序集的位置;
		3.	GAC 全局程序集缓存;

2.	反射
	1.	什么事反射
		通过动态获取程序集, 并获取其中的类型元数据, 然后访问该类型的过程;